Python版设计模式实践 -2- 行为型模式：
    策略模式，观察者模式，命令模式，模版方法模式
    行为型模式会涉及到算法和对象间的职责分配，不仅描述对象或类的模式，还描述它们之间的通信方式，
    刻划了运行时难以跟踪的复杂的控制流，它们将你的注意力从控制流转移到对象间的关系上来。

作业
我们学习了四种设计模式：策略模式，观察着模式，命令模式和模板方法模式，内容是不是有点多呢？下面的习题将进一步帮助巩固你学习到的知识。
	• 请描述策略模式命令模式的不同之处。
	• 在学习命令模式的时候有没有想到任务队列呢？我们将需要执行的命令对象放入队列中，工作线程从队列中获取命令对象，
	    并调用命令的execute方法以完成任务。这不就是命令模式吗？那么问题来了，请使用 Python 线程和队列实现命令模式，在这个例子中，
	    你需要创建命令接收者，命令抽象类，命令具体类，一个用于将命令对象放入队列的线程类和一个从队列中获取命令对象并执行的线程类。
	    （提示：使用 Python threading 和 Queue 模块）
